---
#get persistent volume from bucket
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-obs-jira
  annotations:
    pv.kubernetes.io/provisioned-by: everest-csi-provisioner
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 10Gi
  csi:
    driver: obs.csi.everest.io
    fsType: s3fs
    volumeAttributes:
      everest.io/obs-volume-type: STANDARD
      everest.io/region: ru-moscow-1
      storage.kubernetes.io/csiProvisionerIdentity: everest-csi-provisioner
    volumeHandle: jira-shared-home
  persistentVolumeReclaimPolicy: Delete
  storageClassName: csi-obs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
   name: jira-disk
   namespace: default
   labels:
     app: jira
spec:
  storageClassName: csi-disk
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
#get persistent volume claim for our bucket
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    everest.io/obs-volume-type: STANDARD
    csi.storage.k8s.io/fstype: s3fs
  namespace: default
  name: pv-obs-jira
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: csi-obs
  volumeMode: Filesystem
  volumeName: pv-obs-jira
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jira-cn
  namespace: default
  labels:
    app: jira
spec:
  replicas: 1
  serviceName: "jira"
  selector:
    matchLabels:
      app: jira
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: jira
    spec:
      volumes:
        - name: jira-disk
          persistentVolumeClaim:
            claimName: jira-disk
        - name: jira-shared-home
          persistentVolumeClaim:
            claimName: pv-obs-jira
      containers:
      - name: jira-0
        image: atlassian/jira-software:latest
        env:
          - name: JIRA_HOME
            value: /var/atlassian/application-data/jira
          - name: JIRA_INSTALL
            value: /opt/atlassian/jira
          - name: CATALINA_OPTS
            value: "-Dfile.encoding=UTF-8 -Xms4096m -Xmx8192m"
          - name: JVM_MINIMUM_MEMORY
            value: 4096m
          - name: JVM_MAXIMUM_MEMORY
            value: 8192m
          - name: CLUSTERED
            value: "true"
          - name: JIRA_SHARED_HOME
            value: /var/atlassian/application-data/jira/shared
        resources:
          limits:
            cpu: '6'
            memory: '8Gi'
          requests:
            cpu: '4'
            memory: '4Gi'
        volumeMounts:
          - name: jira-disk
            mountPath: /var/atlassian/application-data/jira
          - name: jira-shared-home
            mountPath: /var/atlassian/application-data/jira/shared
        ports:
          - containerPort: 8080
---
#and end by launching balancer
apiVersion: v1 
kind: Service 
metadata: 
  namespace: default
  annotations:   
    kubernetes.io/elb.class: union
    kubernetes.io/session-affinity-mode: SOURCE_IP
    kubernetes.io/elb.subnet-id: f334e378-ce9a-4c38-b00a-77ea8da9beef
    kubernetes.io/elb.enterpriseID: 0aa90c82b500259c2fddc0012a6ddfd6
    kubernetes.io/elb.autocreate: '{"type":"public","bandwidth_name":"cce-bandwidth-dtibragimov-jira","bandwidth_chargemode":"traffic","bandwidth_size":5,"bandwidth_sharetype":"PER","eip_type":"5_bgp","name":"jira-lb"}'
  labels: 
    app: jira
  name: jira-lb 
spec: 
  externalTrafficPolicy: Local
  ports: 
  - name: service0 
    port: 8080
    protocol: TCP 
    targetPort: 8080
  selector: 
    app: jira
  type: LoadBalancer  
